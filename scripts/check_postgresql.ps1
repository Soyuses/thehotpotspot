# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Host "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Cyan
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker –Ω–∞–π–¥–µ–Ω: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop:" -ForegroundColor Red
    Write-Host "   https://docs.docker.com/desktop/windows/install/" -ForegroundColor Yellow
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose
Write-Host "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose..." -ForegroundColor Cyan
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ docker-compose –Ω–∞–π–¥–µ–Ω: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ docker-compose.test.yml
Write-Host "üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Cyan
if (Test-Path "docker-compose.test.yml") {
    Write-Host "‚úÖ docker-compose.test.yml –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} else {
    Write-Host "‚ùå docker-compose.test.yml –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}

# –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ PostgreSQL
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ PostgreSQL..." -ForegroundColor Cyan
try {
    docker-compose -f docker-compose.test.yml up -d postgres-test
    Write-Host "‚úÖ PostgreSQL –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å PostgreSQL" -ForegroundColor Red
    Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Docker Desktop –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
    exit 1
}

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..." -ForegroundColor Cyan
$timeout = 60
$counter = 0
$ready = $false

do {
    Start-Sleep -Seconds 2
    $counter += 2
    Write-Host "   –ü—Ä–æ–≤–µ—Ä–∫–∞... ($counter/$timeout —Å–µ–∫)" -ForegroundColor Gray
    
    try {
        $result = docker-compose -f docker-compose.test.yml exec -T postgres-test pg_isready -U postgres -d test_blockchain 2>$null
        if ($LASTEXITCODE -eq 0) {
            $ready = $true
            Write-Host "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!" -ForegroundColor Green
            break
        }
    } catch {
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    }
} while ($counter -lt $timeout)

if (-not $ready) {
    Write-Host "‚ùå PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ $timeout —Å–µ–∫—É–Ω–¥" -ForegroundColor Red
    Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.test.yml logs postgres-test" -ForegroundColor Yellow
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
Write-Host "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Cyan
try {
    $env:DATABASE_URL = "postgresql://postgres:password@localhost:5433/test_blockchain"
    $result = docker-compose -f docker-compose.test.yml exec -T postgres-test psql -U postgres -d test_blockchain -c "SELECT 1;" 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
Write-Host "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Cyan
try {
    $tables = docker-compose -f docker-compose.test.yml exec -T postgres-test psql -U postgres -d test_blockchain -t -c "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';" 2>$null
    if ($LASTEXITCODE -eq 0 -and $tables) {
        Write-Host "‚úÖ –¢–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã:" -ForegroundColor Green
        $tables | ForEach-Object { Write-Host "   - $($_.Trim())" -ForegroundColor Gray }
    } else {
        Write-Host "‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é." -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü" -ForegroundColor Red
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
Write-Host "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å PostgreSQL..." -ForegroundColor Cyan
try {
    $env:DATABASE_URL = "postgresql://postgres:password@localhost:5433/test_blockchain"
    cargo test --test test_database -- --nocapture
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –¢–µ—Å—Ç—ã —Å PostgreSQL –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –¢–µ—Å—Ç—ã —Å PostgreSQL –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤" -ForegroundColor Red
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL
Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL..." -ForegroundColor Cyan
try {
    docker-compose -f docker-compose.test.yml down
    Write-Host "‚úÖ PostgreSQL –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PostgreSQL" -ForegroundColor Yellow
}

Write-Host "üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)" -ForegroundColor Gray
Write-Host "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\scripts\run_tests_with_db.ps1" -ForegroundColor Gray
Write-Host "   3. –ò–ª–∏ –≤—Ä—É—á–Ω—É—é: docker-compose -f docker-compose.test.yml up -d" -ForegroundColor Gray
